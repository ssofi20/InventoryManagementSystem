USE master
GO

CREATE DATABASE Inventory_Management
GO

USE Inventory_Management
GO

--BRANDS
CREATE TABLE BRANDS(
	BrandId INT IDENTITY(1,1) NOT NULL,
	Name VARCHAR(100) NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_BRANDS PRIMARY KEY (BrandId)
)
GO

--CATEGORIES
CREATE TABLE CATEGORIES(
	CategoryId INT IDENTITY(1,1) NOT NULL,
	Name VARCHAR(100) NOT NULL, 
	CreatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_CATEGORIES PRIMARY KEY (CategoryId)
)
GO

--PRODUCTS
CREATE TABLE PRODUCTS(
	ProductId INT IDENTITY(1,1) NOT NULL,
	Name VARCHAR(100) NOT NULL, 
	Description VARCHAR(MAX),
	Price MONEY NOT NULL,
	Stock INT NOT NULL,
	BrandId INT NOT NULL, 
	CreatedAt DATETIME DEFAULT GETDATE(),
	UpdatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_PRODUCTS PRIMARY KEY (ProductId),
	CONSTRAINT FK_PRODUCTS_BRANDS FOREIGN KEY (BrandId) REFERENCES BRANDS(BrandId),
)
GO

--PRODUCT_CATEGORY
CREATE TABLE PRODUCT_CATEGORIES(
	ProductId INT NOT NULL,
	CategoryId INT NOT NULL,
	CONSTRAINT PK_PRODUCT_CATEGORIES PRIMARY KEY (ProductId, CategoryId),
    CONSTRAINT FK_PRODUCT_CATEGORIES_PRODUCTS FOREIGN KEY (ProductId) REFERENCES PRODUCTS(ProductId),
    CONSTRAINT FK_PRODUCT_CATEGORIES_CATEGORIES FOREIGN KEY (CategoryId) REFERENCES CATEGORIES(CategoryId)
)
GO

--IMAGES
CREATE TABLE IMAGES(
	ImageId INT IDENTITY(1,1) NOT NULL,
	ImageUrl VARCHAR(MAX) NOT NULL, 
	ProductId INT NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_IMAGES PRIMARY KEY (ImageId),
	CONSTRAINT FK_IMAGES_PRODUCTS FOREIGN KEY (ProductId) REFERENCES PRODUCTS(ProductId)
)
GO

--CUSTOMERS
CREATE TABLE CUSTOMERS(
	CustomerId INT IDENTITY(1,1) NOT NULL, 
	FirstName VARCHAR(100) NOT NULL, 
	LastName VARCHAR(100) NOT NULL, 
	Email VARCHAR(200),
	Phone VARCHAR(50) NOT NULL,
	Address VARCHAR(250),
	CreatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_CUSTOMERS PRIMARY KEY (CustomerId), 
)
GO

--PAYMENT_METHODS
CREATE TABLE PAYMENT_METHODS(
	PaymentMethodId INT IDENTITY(1,1) NOT NULL, 
	Description VARCHAR(100) NOT NULL,
	CONSTRAINT PK_PAYMENT_METHODS PRIMARY KEY (PaymentMethodId)
)
GO

--SALES
CREATE TABLE SALES(
	SaleId INT IDENTITY(1,1) NOT NULL,
	CustomerId INT NOT NULL, 
	SaleDate DATETIME DEFAULT GETDATE(),
	TotalAmount MONEY NOT NULL, 
	PaymentMethodId INT NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_SALES PRIMARY KEY (SaleId),
	CONSTRAINT FK_SALES_CUSTOMERS FOREIGN KEY (CustomerId) REFERENCES CUSTOMERS(CustomerId),
	CONSTRAINT FK_SALES_PAYMENT_METHODS FOREIGN KEY (PaymentMethodId) REFERENCES PAYMENT_METHODS(PaymentMethodId)
)
GO

--SALES_DETAILS
CREATE TABLE SALES_DETAILS(
	SaleId INT NOT NULL,
	ProductId INT NOT NULL,
	Quantity INT NOT NULL, 
	UnitPrice MONEY NOT NULL,
	SubTotal MONEY NOT NULL,
	CONSTRAINT PK_SALES_DETAILS PRIMARY KEY (SaleId, ProductId),
	CONSTRAINT FK_SALES_DETAILS_SALES FOREIGN KEY (SaleId) REFERENCES SALES(SaleId),
	CONSTRAINT FK_SALES_DETAILS_PRODUCTS FOREIGN KEY (ProductId) REFERENCES PRODUCTS(ProductId),
)
GO

--SUPPLIERS
CREATE TABLE SUPPLIERS(
	SupplierId INT IDENTITY(1,1) NOT NULL,
	Name VARCHAR(100) NOT NULL,
	ContactName VARCHAR(100),
	Email VARCHAR(200),
	Phone VARCHAR(50) NOT NULL,
	Address VARCHAR(250),
	CreatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_SUPPLIERS PRIMARY KEY (SupplierId)
)
GO

--PURCHASE_ORDERS
CREATE TABLE PURCHASE_ORDERS(
	PurchaseOrderId INT IDENTITY(1,1) NOT NULL,
	SupplierId INT NOT NULL,
	OrderDate DATETIME DEFAULT GETDATE(),
	Status VARCHAR(50) NOT NULL,
	TotalAmount MONEY NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	CONSTRAINT PK_PURCHASE_ORDERS PRIMARY KEY (PurchaseOrderId),
	CONSTRAINT FK_PURCHASE_ORDERS_SUPPLIERS FOREIGN KEY (SupplierId) REFERENCES SUPPLIERS(SupplierId),
)
GO

--PURCHASE_ORDER_DETAILS
CREATE TABLE PURCHASE_ORDER_DETAILS(
	PurchaseOrderId INT NOT NULL,
	ProductId INT NOT NULL,
	Quantity INT NOT NULL,
	UnitCost MONEY NOT NULL,
	SubTotal MONEY NOT NULL
	CONSTRAINT PK_PURCHASE_ORDER_DETAILS PRIMARY KEY (PurchaseOrderId, ProductId),
	CONSTRAINT FK_PURCHASE_ORDER_DETAILS_PURCHASE_ORDERS FOREIGN KEY (PurchaseOrderId) REFERENCES PURCHASE_ORDERS(PurchaseOrderId),
	CONSTRAINT FK_PURCHASE_ORDER_DETAILS_PRODUCTS FOREIGN KEY (ProductId) REFERENCES PRODUCTS(ProductId)
)
GO